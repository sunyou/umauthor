<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:property-placeholder location="classpath:*.properties"/>

	<!--扫描@Controller-->
	<context:component-scan base-package="com.ai.umauthor.web.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation"
		                        expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
	      depends-on="lifecycleBeanPostProcessor">
		<!-- <property name="proxyTargetClass" value="true" />  -->
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager"
	      class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
			</value>
		</property>
	</bean>

	<!-- 参数转换器 -->
	<bean id="conversionService"
	      class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<!--日期转换器-->
				<bean class="com.ai.umauthor.web.converter.StringToDateConverter"/>
				<bean class="com.ai.umauthor.web.converter.StringToTimestampConverter"/>
			</set>
		</property>
	</bean>
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"
	                       conversion-service="conversionService">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8"/>
			</bean>
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="features">
					<array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
						<!--<value>PrettyFormat</value>-->
						<value>WriteDateUseDateFormat</value>
						<value>WriteMapNullValue</value>
						<value>WriteNullNumberAsZero</value>
						<value>WriteNullBooleanAsFalse</value>
						<value>BrowserCompatible</value>
					</array>
				</property>
			</bean>
		</mvc:message-converters>

	</mvc:annotation-driven>

	<!-- 文件上传相关 -->
	<bean id="multipartResolver"
	      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxUploadSize" value="104857600"/>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/patientManage/**"/>
			<mvc:mapping path="/template/**"/>
			<mvc:mapping path="/frame/mainFrame.html"/>
			<mvc:mapping path="/index.html"/>
			<bean class="com.ai.umauthor.web.interceptor.UserHolderInterceptor">
				<property name="appCode" value="${appCode}"/>
				<property name="domain" value="${aihis.domain.name}"/>
				<!--<property name="cacheTime" value="30"/>&lt;!&ndash; 菜单缓存时间30秒 &ndash;&gt;-->
			</bean>
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/patientManage/**"/>
			<mvc:mapping path="/template/**"/>
			<mvc:mapping path="/frame/mainFrame.html"/>
			<bean class="com.ai.umauthor.web.interceptor.LoginInterceptor">
				<property name="appCode" value="${appCode}"/>
				<property name="domain" value="${aihis.domain.name}"/>
			</bean>
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/wenquan/**"/>
			<bean class="com.ai.umauthor.web.interceptor.ParamInterceptor">
				<property name="domain" value="${aihis.domain.name}"/>
			</bean>
		</mvc:interceptor>

	</mvc:interceptors>

	<!--解决静态资源的访问问题-->
	<mvc:resources location="/static/" mapping="/static/**"/>
	<mvc:default-servlet-handler/>

	<bean class="com.ai.umauthor.web.ApplicationContextHolder"></bean>

</beans>
