<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.umauthor.server.mapper.UmStationMapper" >
  <resultMap id="BaseResultMap" type="com.ai.umauthor.server.model.UmStation" >
    <id column="STATION_ID" property="stationId" jdbcType="DECIMAL" />
    <result column="DOMAIN_ID" property="domainId" jdbcType="VARCHAR" />
    <result column="STATION_NAME" property="stationName" jdbcType="VARCHAR" />
    <result column="STATION_DESC" property="stationDesc" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="DATE" />
    <result column="CREATE_OPERATOR_ID" property="createOperatorId" jdbcType="DECIMAL" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="DATE" />
    <result column="UPDATE_OPERATOR_ID" property="updateOperatorId" jdbcType="DECIMAL" />
    <result column="STATION_STATE" property="stationState" jdbcType="DECIMAL" />
    <result column="GROUP_ID" property="groupId" jdbcType="DECIMAL" />
    <result column="ORG_ID" property="orgId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    STATION_ID, DOMAIN_ID, STATION_NAME, STATION_DESC, CREATE_DATE, CREATE_OPERATOR_ID, 
    UPDATE_DATE, UPDATE_OPERATOR_ID, STATION_STATE, GROUP_ID, ORG_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.umauthor.server.model.UmStationExample" >
    <include refid="pageMapper.head" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from UM_STATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageMapper.tail" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from UM_STATION
    where STATION_ID = #{stationId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from UM_STATION
    where STATION_ID = #{stationId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.umauthor.server.model.UmStationExample" >
    delete from UM_STATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.umauthor.server.model.UmStation" >
    insert into UM_STATION (STATION_ID, DOMAIN_ID, STATION_NAME, 
      STATION_DESC, CREATE_DATE, CREATE_OPERATOR_ID, 
      UPDATE_DATE, UPDATE_OPERATOR_ID, STATION_STATE, 
      GROUP_ID, ORG_ID)
    values (#{stationId,jdbcType=DECIMAL}, #{domainId,jdbcType=VARCHAR}, #{stationName,jdbcType=VARCHAR}, 
      #{stationDesc,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, #{createOperatorId,jdbcType=DECIMAL}, 
      #{updateDate,jdbcType=DATE}, #{updateOperatorId,jdbcType=DECIMAL}, #{stationState,jdbcType=DECIMAL}, 
      #{groupId,jdbcType=DECIMAL}, #{orgId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.umauthor.server.model.UmStation" >
    insert into UM_STATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stationId != null" >
        STATION_ID,
      </if>
      <if test="domainId != null" >
        DOMAIN_ID,
      </if>
      <if test="stationName != null" >
        STATION_NAME,
      </if>
      <if test="stationDesc != null" >
        STATION_DESC,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createOperatorId != null" >
        CREATE_OPERATOR_ID,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateOperatorId != null" >
        UPDATE_OPERATOR_ID,
      </if>
      <if test="stationState != null" >
        STATION_STATE,
      </if>
      <if test="groupId != null" >
        GROUP_ID,
      </if>
      <if test="orgId != null" >
        ORG_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stationId != null" >
        #{stationId,jdbcType=DECIMAL},
      </if>
      <if test="domainId != null" >
        #{domainId,jdbcType=VARCHAR},
      </if>
      <if test="stationName != null" >
        #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="stationDesc != null" >
        #{stationDesc,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="createOperatorId != null" >
        #{createOperatorId,jdbcType=DECIMAL},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=DATE},
      </if>
      <if test="updateOperatorId != null" >
        #{updateOperatorId,jdbcType=DECIMAL},
      </if>
      <if test="stationState != null" >
        #{stationState,jdbcType=DECIMAL},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=DECIMAL},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.umauthor.server.model.UmStationExample" resultType="java.lang.Integer" >
    select count(*) from UM_STATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update UM_STATION
    <set >
      <if test="record.stationId != null" >
        STATION_ID = #{record.stationId,jdbcType=DECIMAL},
      </if>
      <if test="record.domainId != null" >
        DOMAIN_ID = #{record.domainId,jdbcType=VARCHAR},
      </if>
      <if test="record.stationName != null" >
        STATION_NAME = #{record.stationName,jdbcType=VARCHAR},
      </if>
      <if test="record.stationDesc != null" >
        STATION_DESC = #{record.stationDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.createOperatorId != null" >
        CREATE_OPERATOR_ID = #{record.createOperatorId,jdbcType=DECIMAL},
      </if>
      <if test="record.updateDate != null" >
        UPDATE_DATE = #{record.updateDate,jdbcType=DATE},
      </if>
      <if test="record.updateOperatorId != null" >
        UPDATE_OPERATOR_ID = #{record.updateOperatorId,jdbcType=DECIMAL},
      </if>
      <if test="record.stationState != null" >
        STATION_STATE = #{record.stationState,jdbcType=DECIMAL},
      </if>
      <if test="record.groupId != null" >
        GROUP_ID = #{record.groupId,jdbcType=DECIMAL},
      </if>
      <if test="record.orgId != null" >
        ORG_ID = #{record.orgId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update UM_STATION
    set STATION_ID = #{record.stationId,jdbcType=DECIMAL},
      DOMAIN_ID = #{record.domainId,jdbcType=VARCHAR},
      STATION_NAME = #{record.stationName,jdbcType=VARCHAR},
      STATION_DESC = #{record.stationDesc,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=DATE},
      CREATE_OPERATOR_ID = #{record.createOperatorId,jdbcType=DECIMAL},
      UPDATE_DATE = #{record.updateDate,jdbcType=DATE},
      UPDATE_OPERATOR_ID = #{record.updateOperatorId,jdbcType=DECIMAL},
      STATION_STATE = #{record.stationState,jdbcType=DECIMAL},
      GROUP_ID = #{record.groupId,jdbcType=DECIMAL},
      ORG_ID = #{record.orgId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.umauthor.server.model.UmStation" >
    update UM_STATION
    <set >
      <if test="domainId != null" >
        DOMAIN_ID = #{domainId,jdbcType=VARCHAR},
      </if>
      <if test="stationName != null" >
        STATION_NAME = #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="stationDesc != null" >
        STATION_DESC = #{stationDesc,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=DATE},
      </if>
      <if test="createOperatorId != null" >
        CREATE_OPERATOR_ID = #{createOperatorId,jdbcType=DECIMAL},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=DATE},
      </if>
      <if test="updateOperatorId != null" >
        UPDATE_OPERATOR_ID = #{updateOperatorId,jdbcType=DECIMAL},
      </if>
      <if test="stationState != null" >
        STATION_STATE = #{stationState,jdbcType=DECIMAL},
      </if>
      <if test="groupId != null" >
        GROUP_ID = #{groupId,jdbcType=DECIMAL},
      </if>
      <if test="orgId != null" >
        ORG_ID = #{orgId,jdbcType=VARCHAR},
      </if>
    </set>
    where STATION_ID = #{stationId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.umauthor.server.model.UmStation" >
    update UM_STATION
    set DOMAIN_ID = #{domainId,jdbcType=VARCHAR},
      STATION_NAME = #{stationName,jdbcType=VARCHAR},
      STATION_DESC = #{stationDesc,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=DATE},
      CREATE_OPERATOR_ID = #{createOperatorId,jdbcType=DECIMAL},
      UPDATE_DATE = #{updateDate,jdbcType=DATE},
      UPDATE_OPERATOR_ID = #{updateOperatorId,jdbcType=DECIMAL},
      STATION_STATE = #{stationState,jdbcType=DECIMAL},
      GROUP_ID = #{groupId,jdbcType=DECIMAL},
      ORG_ID = #{orgId,jdbcType=VARCHAR}
    where STATION_ID = #{stationId,jdbcType=DECIMAL}
  </update>
</mapper>